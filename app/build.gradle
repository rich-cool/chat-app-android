plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.chatapp"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        buildConfig true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        /*debug {
            applicationIdSuffix ".debug"
            debuggable true
        }*/
    }

    //!!!----change 'version' name----!!!
    flavorDimensions "version"
    productFlavors {
        dev {
            dimension "version"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"

            getProps("./config/dev.props").each { p ->
                buildConfigField 'String', p.key, p.value
            }
        }
        prod {
            dimension "version"
            applicationIdSuffix ".prod"
            versionNameSuffix "-prod"

            getProps("./config/prod.props").each { p ->
                buildConfigField 'String', p.key, p.value
            }
        }
        staging {
            dimension "version"
            applicationIdSuffix ".staging"
            versionNameSuffix "-staging"
        }
    }

    android.variantFilter { variant ->
        if(variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('dev')) {
            variant.setIgnore(true);
        } else if(variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('staging')) {
            variant.setIgnore(true);
        }
    }
}

def getProps(path) {
    Properties props = new Properties()
    props.load(new FileInputStream(file(path)))
    return props
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    testImplementation 'junit:junit:4.+'
    //json junit test
    testImplementation 'org.json:json:20180813'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}